imag_in_info <- groupscluster %>%
filter(group == 2 & register == 'imag') %>% pull(filename)
my_files %>%
filter(brown_names %in% info_in_imag) %>%
select(-semcor_names, -imaginfo, -register) %>%
kable(caption = capthis("Table of informative files in the imaginative cluster")) %>%
kable_styling(full_width = F) %>%
scroll_box(height = "400px")
my_files %>%
filter(brown_names %in% imag_in_info) %>%
select(-semcor_names, -imaginfo, -register, -pressficnon) %>%
kable(caption = capthis("Table of imaginative files in the informative cluster")) %>%
kable_styling(full_width = F)
s <- s4; cull = 10; ngs = 2
s_description <- str_glue("analysis from `stylo` with culling of {cull},
ngram size {1}")
# creates clusters
hc <- hclust(as.dist(s$distance.table), method = "ward.D2")
# groups from clusters
groups <- cutree(hc, k=2)
groupscluster <- tibble(files = names(groups), group = groups) %>%
mutate(register = str_replace_all(files, "([a-z]+)_.*", "\\1")) %>%
mutate(filename = str_replace_all(files, "[a-z]+_([A-Z][0-9][0-9])", "\\1.txt"))
p <- ggplot(groupscluster) +
geom_bar(aes(group, fill = register)) +
labs(caption = paste0("Model information: ", s_description))
## ggplot dendogram
ddata <- dendro_data(as.dendrogram(hc), type = "rectangle")
d <- ggplot() +
geom_segment(data = ddata$segments,
aes(x = x, y = y, xend = xend, yend = yend)) +
geom_text(data = ddata$labels,
aes(x = x, y = y, label = label, color = str_replace_all(label, "([a-z]+)_.*", "\\1"))) +
coord_flip() +
labs(color = 'Register',
caption = paste0("Model information: ", s_description)) +
theme_dendro()
d
info_in_imag <- groupscluster %>%
filter(group == 1 & register == 'info') %>% pull(filename)
imag_in_info <- groupscluster %>%
filter(group == 2 & register == 'imag') %>% pull(filename)
p
s <- s5; cull = 0; ngs = 1
s_description <- str_glue("analysis from `stylo` with culling of {cull},
ngram size {1}")
# creates clusters
hc <- hclust(as.dist(s$distance.table), method = "ward.D2")
# groups from clusters
groups <- cutree(hc, k=2)
groupscluster <- tibble(files = names(groups), group = groups) %>%
mutate(register = str_replace_all(files, "([a-z]+)_.*", "\\1")) %>%
mutate(filename = str_replace_all(files, "[a-z]+_([A-Z][0-9][0-9])", "\\1.txt"))
p <- ggplot(groupscluster) +
geom_bar(aes(group, fill = register)) +
labs(caption = paste0("Model information: ", s_description))
## ggplot dendogram
ddata <- dendro_data(as.dendrogram(hc), type = "rectangle")
d <- ggplot() +
geom_segment(data = ddata$segments,
aes(x = x, y = y, xend = xend, yend = yend)) +
geom_text(data = ddata$labels,
aes(x = x, y = y, label = label, color = str_replace_all(label, "([a-z]+)_.*", "\\1"))) +
coord_flip() +
labs(color = 'Register',
caption = paste0("Model information: ", s_description)) +
theme_dendro()
d
p
info_in_imag <- groupscluster %>%
filter(group == 1 & register == 'info') %>% pull(filename)
imag_in_info <- groupscluster %>%
filter(group == 2 & register == 'imag') %>% pull(filename)
my_files %>%
filter(brown_names %in% info_in_imag) %>%
select(-semcor_names, -imaginfo, -register) %>%
kable(caption = capthis("Table of informative files in the imaginative cluster")) %>%
kable_styling(full_width = F) %>%
scroll_box(height = "400px")
my_files %>%
filter(brown_names %in% info_in_imag) %>%
select(-semcor_names, -imaginfo, -register, -in_semcor) %>%
kable(caption = capthis("Table of informative files in the imaginative cluster")) %>%
kable_styling(full_width = F) %>%
scroll_box(height = "400px")
my_files %>%
filter(brown_names %in% imag_in_info) %>%
select(-semcor_names, -imaginfo, -register, -pressficnon) %>%
kable(caption = capthis("Table of imaginative files in the informative cluster")) %>%
kable_styling(full_width = F)
s <- s6; cull = 10; ngs = 1
s_description <- str_glue("analysis from `stylo` with culling of {cull},
ngram size {1}")
# creates clusters
hc <- hclust(as.dist(s$distance.table), method = "ward.D2")
# groups from clusters
groups <- cutree(hc, k=2)
groupscluster <- tibble(files = names(groups), group = groups) %>%
mutate(register = str_replace_all(files, "([a-z]+)_.*", "\\1")) %>%
mutate(filename = str_replace_all(files, "[a-z]+_([A-Z][0-9][0-9])", "\\1.txt"))
p <- ggplot(groupscluster) +
geom_bar(aes(group, fill = register)) +
labs(caption = paste0("Model information: ", s_description))
## ggplot dendogram
ddata <- dendro_data(as.dendrogram(hc), type = "rectangle")
d <- ggplot() +
geom_segment(data = ddata$segments,
aes(x = x, y = y, xend = xend, yend = yend)) +
geom_text(data = ddata$labels,
aes(x = x, y = y, label = label, color = str_replace_all(label, "([a-z]+)_.*", "\\1"))) +
coord_flip() +
labs(color = 'Register',
caption = paste0("Model information: ", s_description)) +
theme_dendro()
d
p
info_in_imag <- groupscluster %>%
filter(group == 1 & register == 'info') %>% pull(filename)
imag_in_info <- groupscluster %>%
filter(group == 2 & register == 'imag') %>% pull(filename)
my_files %>%
filter(brown_names %in% info_in_imag) %>%
select(-semcor_names, -imaginfo, -register, -in_semcor) %>%
kable(caption = capthis("Table of informative files in the imaginative cluster")) %>%
kable_styling(full_width = F) %>%
scroll_box(height = "400px")
s <- s7; cull = 0; ngs = 2
s_description <- str_glue("analysis from `stylo` with culling of {cull},
ngram size {1}")
# creates clusters
hc <- hclust(as.dist(s$distance.table), method = "ward.D2")
# groups from clusters
groups <- cutree(hc, k=2)
groupscluster <- tibble(files = names(groups), group = groups) %>%
mutate(register = str_replace_all(files, "([a-z]+)_.*", "\\1")) %>%
mutate(filename = str_replace_all(files, "[a-z]+_([A-Z][0-9][0-9])", "\\1.txt"))
p <- ggplot(groupscluster) +
geom_bar(aes(group, fill = register)) +
labs(caption = paste0("Model information: ", s_description))
## ggplot dendogram
ddata <- dendro_data(as.dendrogram(hc), type = "rectangle")
d <- ggplot() +
geom_segment(data = ddata$segments,
aes(x = x, y = y, xend = xend, yend = yend)) +
geom_text(data = ddata$labels,
aes(x = x, y = y, label = label, color = str_replace_all(label, "([a-z]+)_.*", "\\1"))) +
coord_flip() +
labs(color = 'Register',
caption = paste0("Model information: ", s_description)) +
theme_dendro()
d
p
info_in_imag <- groupscluster %>%
filter(group == 1 & register == 'info') %>% pull(filename)
imag_in_info <- groupscluster %>%
filter(group == 2 & register == 'imag') %>% pull(filename)
my_files %>%
filter(brown_names %in% info_in_imag) %>%
select(-semcor_names, -imaginfo, -register, -in_semcor) %>%
kable(caption = capthis("Table of informative files in the imaginative cluster")) %>%
kable_styling(full_width = F) %>%
scroll_box(height = "400px")
my_files %>%
filter(brown_names %in% imag_in_info) %>%
select(-semcor_names, -imaginfo, -register, -pressficnon, -insemcor) %>%
kable(caption = capthis("Table of imaginative files in the informative cluster")) %>%
kable_styling(full_width = F)
my_files %>%
filter(brown_names %in% imag_in_info) %>%
select(-semcor_names, -imaginfo, -register, -pressficnon, -in_semcor) %>%
kable(caption = capthis("Table of imaginative files in the informative cluster")) %>%
kable_styling(full_width = F)
groups3 <- cutree(hc, k=3)
groupscluster <- tibble(files = names(groups), group = groups)
groupscluster
groupscluster <- tibble(files = names(groups), group = groups) %>%
separate(files, into = c("register", "file"))
tibble(files = names(groups), group = groups) %>%
separate(files, into = c("register", "file"))
groupscluster
head(my_files)
tibble(files = names(groups), group = groups) %>%
separate(files, into = c("register", "file")) %>%
mutate(brown_names = str_c(file, ".txt"))
tibble(files = names(groups), group = groups) %>%
separate(files, into = c("register", "file")) %>%
mutate(brown_names = str_c(file, ".txt")) %>%
left_join(my_files, by = "brown_names")
tibble(files = names(groups), group = groups) %>%
separate(files, into = c("register", "file")) %>%
mutate(brown_names = str_c(file, ".txt")) %>%
rename(imaginfo = register) %>%
left_join(my_files, by = "brown_names")
tibble(files = names(groups), group = groups) %>%
separate(files, into = c("register", "file")) %>%
mutate(brown_names = str_c(file, ".txt")) %>%
rename(imaginfo = register) %>%
left_join(my_files, by = c("brown_names", "imaginfo"))
groupcluster3 <- tibble(files = names(groups), group = groups) %>%
separate(files, into = c("register", "file")) %>%
mutate(brown_names = str_c(file, ".txt")) %>%
rename(imaginfo = register) %>%
left_join(my_files, by = c("brown_names", "imaginfo"))
p3 <- ggplot(groupscluster3) +
geom_bar(aes(group, fill = register)) +
labs(caption = paste0("Model information: ", s_description))
groupcluster3 <- tibble(files = names(groups), group = groups) %>%
separate(files, into = c("register", "file")) %>%
mutate(brown_names = str_c(file, ".txt")) %>%
rename(imaginfo = register) %>%
left_join(my_files, by = c("brown_names", "imaginfo"))
p3 <- ggplot(groupscluster3) +
geom_bar(aes(group, fill = register)) +
labs(caption = paste0("Model information: ", s_description))
p3 <- ggplot(groupcluster3) +
geom_bar(aes(group, fill = register)) +
labs(caption = paste0("Model information: ", s_description))
p3
groupcluster3 <- tibble(files = names(groups3), group = groups3) %>%
separate(files, into = c("register", "file")) %>%
mutate(brown_names = str_c(file, ".txt")) %>%
rename(imaginfo = register) %>%
left_join(my_files, by = c("brown_names", "imaginfo"))
p3 <- ggplot(groupcluster3) +
geom_bar(aes(group, fill = register)) +
labs(caption = paste0("Model information: ", s_description))
p3
p3 <- ggplot(groupcluster3) +
geom_bar(aes(group, fill = imaginfo)) +
labs(caption = paste0("Model information: ", s_description))
p3
groupcluster3
p3 <- ggplot(groupcluster3) +
geom_bar(aes(group, fill = pressficnon)) +
labs(caption = paste0("Model information: ", s_description))
p3
p3 <- ggplot(groupcluster3) +
geom_bar(aes(group, fill = category_name)) +
labs(caption = paste0("Model information: ", s_description))
p3
s <- s8; cull = 10; ngs = 2
s_description <- str_glue("analysis from `stylo` with culling of {cull},
ngram size {1}")
# creates clusters
hc <- hclust(as.dist(s$distance.table), method = "ward.D2")
# groups from clusters
groups <- cutree(hc, k=2)
groupscluster <- tibble(files = names(groups), group = groups) %>%
mutate(register = str_replace_all(files, "([a-z]+)_.*", "\\1")) %>%
mutate(filename = str_replace_all(files, "[a-z]+_([A-Z][0-9][0-9])", "\\1.txt"))
p <- ggplot(groupscluster) +
geom_bar(aes(group, fill = register)) +
labs(caption = paste0("Model information: ", s_description))
## ggplot dendogram
ddata <- dendro_data(as.dendrogram(hc), type = "rectangle")
d <- ggplot() +
geom_segment(data = ddata$segments,
aes(x = x, y = y, xend = xend, yend = yend)) +
geom_text(data = ddata$labels,
aes(x = x, y = y, label = label, color = str_replace_all(label, "([a-z]+)_.*", "\\1"))) +
coord_flip() +
labs(color = 'Register',
caption = paste0("Model information: ", s_description)) +
theme_dendro()
d
p
info_in_imag <- groupscluster %>%
filter(group == 1 & register == 'info') %>% pull(filename)
imag_in_info <- groupscluster %>%
filter(group == 2 & register == 'imag') %>% pull(filename)
my_files %>%
filter(brown_names %in% info_in_imag) %>%
select(-semcor_names, -imaginfo, -register, -in_semcor) %>%
kable(caption = capthis("Table of informative files in the imaginative cluster")) %>%
kable_styling(full_width = F) %>%
scroll_box(height = "400px")
groups3 <- cutree(hc, k=3)
groupcluster3 <- tibble(files = names(groups3), group = groups3) %>%
separate(files, into = c("register", "file")) %>%
mutate(brown_names = str_c(file, ".txt")) %>%
rename(imaginfo = register) %>%
left_join(my_files, by = c("brown_names", "imaginfo"))
p3 <- ggplot(groupcluster3) +
geom_bar(aes(group, fill = category_name)) +
labs(caption = paste0("Model information: ", s_description))
p3
p3 <- ggplot(groupcluster3) +
geom_bar(aes(group, fill = has_simply_church)) +
labs(caption = paste0("Model information: ", s_description))
p3
groupcluster3
p3 <- ggplot(groupcluster3) +
geom_bar(aes(group, fill = has_simple_church)) +
labs(caption = paste0("Model information: ", s_description))
p3
p3 <- ggplot(groupcluster3) +
geom_bar(aes(has_simple_church, fill = group)) +
labs(caption = paste0("Model information: ", s_description))
p3
groupcluster3
groupcluster3 <- tibble(files = names(groups3), group = groups3) %>%
separate(files, into = c("register", "file")) %>%
mutate(brown_names = str_c(file, ".txt")) %>%
rename(imaginfo = register, cluster = group) %>%
left_join(my_files, by = c("brown_names", "imaginfo"))
p3 <- ggplot(groupcluster3) +
geom_bar(aes(has_simple_church, fill = cluster)) +
labs(caption = paste0("Model information: ", s_description))
p3
p3 <- ggplot(groupcluster3) +
geom_bar(aes(cluster, fill = has_simple_church)) +
labs(caption = paste0("Model information: ", s_description))
p3
tokens_info <- read_tsv("C:/Users/u0118974/xampp/htdocs/GitHub/delhikiev.github.io/church_tokens.tsv")
tokens_info <- read_tsv("C:/Users/u0118974/xampp/htdocs/GitHub/delhikiev.github.io/church_tokens.tsv") %>%
mutate(brown_names = str_to_upper(str_replace_all(`_id`, "^church/N/br-([a-z][0-9][0-9])/.*$", "\\2.txt")))
tokens_info <- read_tsv("C:/Users/u0118974/xampp/htdocs/GitHub/delhikiev.github.io/church_tokens.tsv") %>%
mutate(brown_names = str_replace_all(`_id`, "^church/N/br-([a-z][0-9][0-9])/.*$", "\\2.txt"))
tokens_info <- read_tsv("C:/Users/u0118974/xampp/htdocs/GitHub/delhikiev.github.io/church_tokens.tsv") %>%
mutate(brown_names = str_replace_all(`_id`, "^church/N/br-([a-z][0-9][0-9])/.*$", "\\1.txt"))
tokens_info
tokens_info <- read_tsv("C:/Users/u0118974/xampp/htdocs/GitHub/delhikiev.github.io/church_tokens.tsv") %>%
mutate(brown_names = str_to_upper(str_replace_all(`_id`, "^church/N/br-([a-z][0-9][0-9])/.*$", "\\1.txt")))
tokens_info %>% count(brown_names)
tokens_info %>%
select(token_id, sense, supersense, brown_names, compound_status) %>%
left_join(groupcluster3, by = brown_names)
tokens_info %>%
select(`_id`, sense, supersense, brown_names, compound_status) %>%
left_join(groupcluster3, by = brown_names)
tokens_info %>%
select(`_id`, sense, supersense, brown_names, compound_status) %>%
left_join(groupcluster3, by = 'brown_names')
tokens_info <- tokens_info %>%
select(`_id`, sense, supersense, brown_names, compound_status) %>%
left_join(groupcluster3, by = 'brown_names')
ggplot(tokens_info) +
geom_bar(aes(cluster, sense))
ggplot(tokens_info) +
geom_bar(aes(cluster, fill=sense))
tokens_info
groupcluster3
tokens_info
groupcluster3$brown_names[groupcluster3$brown_names %in% tokens_info$brown_names]
tokens_info <- read_tsv("C:/Users/u0118974/xampp/htdocs/GitHub/delhikiev.github.io/church_tokens.tsv") %>%
mutate(brown_names = str_to_upper(str_replace_all(`_id`, "^church/N/br-([a-z][0-9][0-9])/.*$", "\\1"))) %>%
mutate(brown_names = str_c(brown_names, ".txt"))
tokens_info <- tokens_info %>%
select(`_id`, sense, supersense, brown_names, compound_status) %>%
left_join(groupcluster3, by = 'brown_names')
tokens_info
ggplot(tokens_info) +
geom_bar(aes(cluster, fill=sense))
ggplot(tokens_info) +
geom_bar(aes(cluster, fill=supersense))
ggplot(tokens_info) +
geom_bar(imaginfo, fill = supersense)
ggplot(tokens_info) +
geom_bar(aes(imaginfo, fill=supersense))
ggplot(tokens_info) +
geom_bar(aes(cluster, fill=supersense))
groupcluster3
p3 <- ggplot(groupcluster3) +
geom_bar(aes(cluster, fill = pressficnon)) +
labs(caption = paste0("Model information: ", s_description))
p3
p3 <- ggplot(groupcluster3) +
geom_bar(aes(cluster, fill = category_name)) +
labs(caption = paste0("Model information: ", s_description))
p3
groupcluster3 %>% select(semcor_names, cluster)
groupcluster3 %>% select(semcor_names, cluster) %>% mutate(cluster = fct_recode(cluster, mostly_fiction = 1))
groupcluster3 %>% select(semcor_names, cluster) %>% mutate(cluster = factor(cluster)) %>% mutate(cluster = fct_recode(cluster, mostly_fiction = "1"))
p3 <- ggplot(groupcluster3) +
geom_bar(aes(cluster, fill = pressficnon)) +
labs(caption = paste0("Model information: ", s_description))
p3
groupcluster3 %>% select(semcor_names, cluster) %>% mutate(cluster = factor(cluster)) %>% mutate(cluster = fct_recode(cluster, mostly_fiction = "1", mostly_nonfiction = "2", mostly_press = "3"))
groupcluster3 %>% select(semcor_names, cluster) %>% mutate(cluster = factor(cluster)) %>% mutate(cluster = fct_recode(cluster, mostly_fiction = "1", mostly_nonfiction = "2", mostly_press = "3")) %>% count(cluster)
groupcluster3 %>% select(semcor_names, cluster) %>% mutate(cluster = factor(cluster)) %>% mutate(cluster = fct_recode(cluster, mostly_fiction = "1", mostly_nonfiction = "2", mostly_press = "3")) %>% write_csv("C:/Users/u0118974/Box Sync/church and rest/Brown_raw/three_semcor_clusters.csv")
github <- "C:/Users/u0118974/xampp/htdocs/GitHub/delhikiev.github.io/"
fname <- paste0(github, "church.tsv")
clouds <- read_tsv(fname)
nrow(clouds)
clouds %>% distinct() %>% nrow()
colnames(stress)
colnames(clouds)
tail(colnames(clouds))
length(colnames(clouds)[!endsWith(colnames(clouds), ".x")])
length(colnames(clouds))
length(colnames(clouds)[!endsWith(colnames(clouds), ".x")|!endsWith(colnames(clouds), ".y")])
length(colnames(clouds)[!endsWith(colnames(clouds), ".x")&!endsWith(colnames(clouds), ".y")])
colnames(clouds)[!endsWith(colnames(clouds), ".x")&!endsWith(colnames(clouds), ".y")]
fname <- paste0(github, "church.models.tsv")
models <- read_tsv(fname)
nrow(models)
models %>% distinct() %>% nnrow()
models %>% distinct() %>% nrow()
models %>% select(-stress) %>% distinct() %>% nrow()
n_distinct(models$model)
models %>% mutate(idx = seq.int(1, nrow(models)))
models %>% mutate(idx = seq.int(1, nrow(models)))
models %>% filter(register == 'all') %>% count(tokens)
models %>% count(register)
models %>% count(compounds)
models <- read_tsv(fname)
models %>% count(register)
nrow(models)
shiny::runApp('C:/Users/u0118974/Box Sync/church and rest/DepsNCues/cw_clouds/TypeClouds')
groupcluster3
groupcluster3 %>% count(register, cluster) %>% spread(key = register, value = n, fill = 0)
groupcluster3 %>% count(pressficnon, cluster) %>% spread(key = pressficnon, value = n, fill = 0)
groupcluster3 %>% count(imaginfo, cluster) %>% spread(key = imaginfo, value = n, fill = 0)
groupcluster3 %>% count(register, cluster) %>% spread(key = cluster, value = n, fill = 0)
groupcluster3 %>% count(category_name, cluster) %>% spread(key = cluster, value = n, fill = 0)
runApp('C:/Users/u0118974/Box Sync/church and rest/DepsNCues/cw_clouds/TypeClouds')
tokens_info
tokens_info %>% filter(cluster == '1')
tokens_info %>% filter(cluster == '1' & compound_status=='simply_church') %>% count(supersense, category_name) %>% spread(key = supersense, value = n, fill = 0)
tokens_info %>% filter(cluster == '2' & compound_status=='simply_church') %>% count(supersense, category_name) %>% spread(key = supersense, value = n, fill = 0)
tokens_info %>% filter(cluster == '3' & compound_status=='simply_church') %>% count(supersense, category_name) %>% spread(key = supersense, value = n, fill = 0)
shiny::runApp('C:/Users/u0118974/Box Sync/church and rest/3Dclouds')
runApp('C:/Users/u0118974/Box Sync/church and rest/3Dclouds')
install.packages("misc3d")
clouds
shiny::runApp('C:/Users/u0118974/Box Sync/church and rest/3Dclouds')
runApp('C:/Users/u0118974/Box Sync/church and rest/3Dclouds')
subcloud
clouds <- read_tsv("church.clouds.tsv")
library(shiny)
runApp('C:/Users/u0118974/Desktop')
runApp('C:/Users/u0118974/Desktop')
runApp('C:/Users/u0118974/Desktop')
runApp('C:/Users/u0118974/Desktop')
runApp('C:/Users/u0118974/Desktop')
runApp('C:/Users/u0118974/Desktop')
runApp('C:/Users/u0118974/Desktop')
runApp('C:/Users/u0118974/Box Sync/church and rest/3Dclouds')
clouds
#clouds <- read_tsv("church.tsv")
# models <- read_tsv("church.models.tsv")
#clouds <- read_tsv("old.favorite.cloud.tsv")
clouds <- read_tsv("favorite.cloud.tsv")
shiny::runApp('C:/Users/u0118974/Box Sync/church and rest/3Dclouds')
dist <- "nocomp.10_10_nvj_nobound.noweight.1.s.5k_all.5_5.ttmx.dist.pac"
temp <- unzip(dist, unzip="internal")
tokvecs <- npyLoad(temp[2])
metadata <- fromJSON(file = temp[1])
dimid2item <- metadata$'row_items'
dimnames(tokvecs) <- list(dimid2item, dimid2item)
file.remove(temp[1], temp[2])
hc <- hclust(dist(tokvecs), method = "average")
ddata <- dendro_data(as.dendrogram(hc))
library(shiny); library(shinythemes)
library(readr); library(dplyr); library(purrr); library(forcats)
library(ggplot2); library(plotly); library(misc3d)
library(RcppCNPy); library(rjson)
library(ggdendro)
#clouds <- read_tsv("church.tsv")
# models <- read_tsv("church.models.tsv")
#clouds <- read_tsv("old.favorite.cloud.tsv")
clouds <- read_tsv("new.favorite.cloud.tsv")
legendmap <- read_tsv("legendmap.tsv")
dist <- "nocomp.10_10_nvj_nobound.noweight.1.s.5k_all.5_5.ttmx.dist.pac"
temp <- unzip(dist, unzip="internal")
tokvecs <- npyLoad(temp[2])
metadata <- fromJSON(file = temp[1])
dimid2item <- metadata$'row_items'
dimnames(tokvecs) <- list(dimid2item, dimid2item)
file.remove(temp[1], temp[2])
R.version
install.packages('zipfR')
library(tidyverse)
## Working directory should be the dir with isoMDS solutions
setwd("Aug01/")
models <- read_tsv("church.models.tsv")
setwd('../xampp/htdocs/GitHub/montesmariana.github.io/NephoVis/')
dir()
library(tidyverse)
church <- read_tsv('church/church.tsv')
# ---------------------
church %>% select(`_id`, `_ctxt.church_nocomp.10_10.raw`)
# ---------------------
church %>% select(`_id`, `_ctxt.church_nocomp.10_10.raw`) %>%
setNames(c('id', 'text'))
# ---------------------
church %>% select(`_id`, `_ctxt.church_nocomp.10_10.raw`) %>%
setNames(c('id', 'text')) %>%
separate(text, c('left', 'target', 'right'), sep="(<span class='target'>)|(</span>)")
# ---------------------
church %>% select(`_id`, `_ctxt.church_nocomp.10_10.raw`) %>%
setNames(c('id', 'text')) %>%
separate(text, c('left', 'target', 'right'), sep="(<span class='target'>)|(</span>)") %>%
write_tsv("../Annotation/church.tsv")
# ---------------------
church %>% select(`_id`, `_ctxt.church_nocomp.10_10.raw`) %>%
setNames(c('id', 'text')) %>%
separate(text, c('left', 'target', 'right'), sep="(<span class='target'>)|(</span>)") %>%
pull('id')
# ---------------------
id <- church %>% select(`_id`, `_ctxt.church_nocomp.10_10.raw`) %>%
setNames(c('id', 'text')) %>%
separate(text, c('left', 'target', 'right'), sep="(<span class='target'>)|(</span>)") %>%
pull('id')
id[1:10]
id[11:20]
str_c(id[11:20])
str_c(id[11:20], collapse = ", ")
str_c(id[11:20], collapse = '", "')
str_c(id[21:30], collapse = '", "')
str_c(id[5:15], collapse = '", "')
str_c(id[15:25], collapse = '", "')
